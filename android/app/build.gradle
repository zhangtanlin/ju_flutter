def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    // 签名信息配置
    // 注意：signingConfigs 需要写在defaultConfig 和buildTypes 前面，不然会编译报错。
    signingConfigs {
        // 发布版本的签名配置
        release {
            // storeFile file(props['KEYSTORE_FILE'])
            // keyAlias props['KEY_ALIAS']
            // storePassword props['KEYSTORE_PWD']
            // keyPassword props['KEY_PWD']
        }
    }

    // 默认配置
    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.ju_flutter"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    // 打包 apk
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            // 是否移除无用资源
            // zipAlignEnabled true
            // 是否混淆
            // minifyEnabled false
            // 启用资源缩减功能（若为代码缩减，则还包括 minifyEnabled）
            // shrinkResources true
            // 混淆的配置文件
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 表明生成release 版本时使用我们指定的 signingConfigs.release 签名文件。
            // signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

// 依赖配置
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
